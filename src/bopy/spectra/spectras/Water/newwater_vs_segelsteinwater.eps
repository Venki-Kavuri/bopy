%!PS-Adobe-2.0 EPSF-2.0
%%Title: newwater_vs_segelsteinwater.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Wed Aug 10 17:31:32 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (newwater_vs_segelsteinwater.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Saurav Pathak,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Aug 10 17:31:32 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
994 280 M
63 0 V
5989 0 R
-63 0 V
stroke
910 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0001)]
] -46.7 MRshow
1.000 UL
LTb
994 626 M
31 0 V
6021 0 R
-31 0 V
994 828 M
31 0 V
6021 0 R
-31 0 V
994 971 M
31 0 V
6021 0 R
-31 0 V
994 1082 M
31 0 V
6021 0 R
-31 0 V
994 1173 M
31 0 V
6021 0 R
-31 0 V
994 1250 M
31 0 V
6021 0 R
-31 0 V
994 1317 M
31 0 V
6021 0 R
-31 0 V
994 1375 M
31 0 V
6021 0 R
-31 0 V
994 1428 M
63 0 V
5989 0 R
-63 0 V
stroke
910 1428 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
1.000 UL
LTb
994 1774 M
31 0 V
6021 0 R
-31 0 V
994 1976 M
31 0 V
6021 0 R
-31 0 V
994 2119 M
31 0 V
6021 0 R
-31 0 V
994 2230 M
31 0 V
6021 0 R
-31 0 V
994 2321 M
31 0 V
6021 0 R
-31 0 V
994 2398 M
31 0 V
6021 0 R
-31 0 V
994 2465 M
31 0 V
6021 0 R
-31 0 V
994 2523 M
31 0 V
6021 0 R
-31 0 V
994 2576 M
63 0 V
5989 0 R
-63 0 V
stroke
910 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
1.000 UL
LTb
994 2922 M
31 0 V
6021 0 R
-31 0 V
994 3124 M
31 0 V
6021 0 R
-31 0 V
994 3267 M
31 0 V
6021 0 R
-31 0 V
994 3378 M
31 0 V
6021 0 R
-31 0 V
994 3469 M
31 0 V
6021 0 R
-31 0 V
994 3546 M
31 0 V
6021 0 R
-31 0 V
994 3613 M
31 0 V
6021 0 R
-31 0 V
994 3671 M
31 0 V
6021 0 R
-31 0 V
994 3724 M
63 0 V
5989 0 R
-63 0 V
stroke
910 3724 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
994 4070 M
31 0 V
6021 0 R
-31 0 V
994 4272 M
31 0 V
6021 0 R
-31 0 V
994 4415 M
31 0 V
6021 0 R
-31 0 V
994 4526 M
31 0 V
6021 0 R
-31 0 V
994 4617 M
31 0 V
6021 0 R
-31 0 V
994 4694 M
31 0 V
6021 0 R
-31 0 V
994 4761 M
31 0 V
6021 0 R
-31 0 V
994 4819 M
31 0 V
6021 0 R
-31 0 V
994 4872 M
63 0 V
5989 0 R
-63 0 V
stroke
910 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
994 280 M
0 31 V
0 4561 R
0 -31 V
2433 280 M
0 31 V
0 4561 R
0 -31 V
3455 280 M
0 31 V
0 4561 R
0 -31 V
4247 280 M
0 31 V
0 4561 R
0 -31 V
4894 280 M
0 31 V
0 4561 R
0 -31 V
5441 280 M
0 31 V
0 4561 R
0 -31 V
5915 280 M
0 31 V
0 4561 R
0 -31 V
6334 280 M
0 31 V
0 4561 R
0 -31 V
6708 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6708 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
994 4872 N
994 280 L
6052 0 V
0 4592 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
LTb
6395 4739 M
("./newwater.dat") Rshow
LT0
1814 2178 Pls
1843 2158 Pls
1870 2139 Pls
1898 2121 Pls
1925 2102 Pls
1953 2084 Pls
1980 2066 Pls
2006 2047 Pls
2033 2027 Pls
2059 2007 Pls
2086 1987 Pls
2112 1966 Pls
2137 1945 Pls
2163 1925 Pls
2189 1904 Pls
2214 1887 Pls
2239 1870 Pls
2264 1848 Pls
2289 1821 Pls
2313 1793 Pls
2337 1773 Pls
2362 1752 Pls
2386 1734 Pls
2410 1719 Pls
2433 1704 Pls
2457 1685 Pls
2480 1665 Pls
2504 1647 Pls
2527 1628 Pls
2550 1609 Pls
2573 1594 Pls
2595 1578 Pls
2618 1563 Pls
2640 1552 Pls
2663 1540 Pls
2685 1530 Pls
2707 1521 Pls
2729 1511 Pls
2750 1501 Pls
2772 1491 Pls
2793 1482 Pls
2815 1472 Pls
2836 1462 Pls
2857 1451 Pls
2878 1439 Pls
2899 1428 Pls
2919 1417 Pls
2940 1405 Pls
2960 1392 Pls
2981 1380 Pls
3001 1369 Pls
3021 1357 Pls
3041 1346 Pls
3061 1334 Pls
3081 1322 Pls
3100 1311 Pls
3120 1300 Pls
3139 1288 Pls
3159 1276 Pls
3178 1264 Pls
3197 1253 Pls
3216 1242 Pls
3235 1230 Pls
3254 1219 Pls
3273 1206 Pls
3291 1194 Pls
3310 1181 Pls
3328 1169 Pls
3347 1157 Pls
3365 1146 Pls
3383 1132 Pls
3401 1117 Pls
3419 1104 Pls
3437 1092 Pls
3455 1079 Pls
3472 1065 Pls
3490 1051 Pls
3508 1038 Pls
3525 1026 Pls
3542 1014 Pls
3560 1000 Pls
3577 985 Pls
3594 971 Pls
3611 956 Pls
3628 941 Pls
3645 925 Pls
3662 908 Pls
3678 889 Pls
3695 868 Pls
3711 851 Pls
3728 838 Pls
3744 825 Pls
3761 809 Pls
3777 791 Pls
3793 773 Pls
3809 755 Pls
3825 737 Pls
3841 720 Pls
3857 703 Pls
3873 686 Pls
3889 677 Pls
3904 667 Pls
3920 659 Pls
3935 651 Pls
3951 644 Pls
3966 639 Pls
3982 635 Pls
3997 629 Pls
4012 621 Pls
4027 613 Pls
4042 603 Pls
4057 593 Pls
4072 588 Pls
4087 588 Pls
4102 589 Pls
4117 588 Pls
4131 588 Pls
4146 589 Pls
4161 593 Pls
4175 596 Pls
4190 607 Pls
4204 618 Pls
4218 640 Pls
4233 671 Pls
4247 700 Pls
4261 730 Pls
4275 759 Pls
4289 788 Pls
4303 819 Pls
4317 847 Pls
4331 875 Pls
4345 901 Pls
4359 920 Pls
4372 933 Pls
4386 945 Pls
4400 952 Pls
4413 959 Pls
4427 968 Pls
4440 980 Pls
4454 992 Pls
4467 1004 Pls
4480 1017 Pls
4494 1033 Pls
4507 1052 Pls
4520 1071 Pls
4533 1085 Pls
4546 1099 Pls
4559 1112 Pls
4572 1125 Pls
4585 1138 Pls
4598 1153 Pls
4611 1168 Pls
4624 1182 Pls
4637 1196 Pls
4649 1209 Pls
4662 1225 Pls
4675 1240 Pls
4687 1256 Pls
4700 1273 Pls
4712 1289 Pls
4725 1310 Pls
4737 1331 Pls
4749 1359 Pls
4762 1392 Pls
4774 1422 Pls
4786 1449 Pls
4798 1473 Pls
4810 1506 Pls
4822 1544 Pls
4834 1579 Pls
4847 1612 Pls
4858 1643 Pls
4870 1671 Pls
4882 1728 Pls
4894 1778 Pls
4906 1810 Pls
4918 1840 Pls
4929 1863 Pls
4941 1879 Pls
4953 1895 Pls
4964 1908 Pls
4976 1920 Pls
4988 1932 Pls
4999 1943 Pls
5011 1952 Pls
5022 1959 Pls
5033 1965 Pls
5045 1971 Pls
5056 1974 Pls
5067 1977 Pls
5079 1981 Pls
5090 1985 Pls
5101 1988 Pls
5112 1989 Pls
5123 1990 Pls
5134 1992 Pls
5145 1994 Pls
5156 1996 Pls
5167 2005 Pls
5178 2013 Pls
5189 2024 Pls
5200 2035 Pls
5211 2047 Pls
5222 2060 Pls
5233 2073 Pls
5243 2084 Pls
5254 2094 Pls
5265 2101 Pls
5275 2106 Pls
5286 2111 Pls
5296 2117 Pls
5307 2123 Pls
5318 2130 Pls
5328 2138 Pls
5339 2145 Pls
5349 2157 Pls
5359 2173 Pls
5370 2188 Pls
5380 2201 Pls
5390 2213 Pls
5401 2234 Pls
5411 2255 Pls
5421 2277 Pls
5431 2300 Pls
5441 2322 Pls
5452 2364 Pls
5462 2402 Pls
5472 2440 Pls
5482 2479 Pls
5492 2515 Pls
5502 2552 Pls
5512 2586 Pls
5522 2628 Pls
5532 2675 Pls
5541 2720 Pls
5551 2765 Pls
5561 2806 Pls
5571 2853 Pls
5581 2897 Pls
5590 2930 Pls
5600 2956 Pls
5610 2981 Pls
5619 3000 Pls
5629 3014 Pls
5639 3028 Pls
5648 3037 Pls
5658 3045 Pls
5667 3050 Pls
5677 3052 Pls
5686 3055 Pls
5696 3056 Pls
5705 3057 Pls
5715 3057 Pls
5724 3056 Pls
5733 3054 Pls
5743 3052 Pls
5752 3050 Pls
5761 3048 Pls
5771 3037 Pls
5780 3029 Pls
5789 3022 Pls
5798 3015 Pls
5807 3007 Pls
5816 2996 Pls
5826 2985 Pls
5835 2974 Pls
5844 2962 Pls
5853 2952 Pls
5862 2944 Pls
5871 2935 Pls
5880 2927 Pls
5889 2919 Pls
5898 2917 Pls
5907 2915 Pls
5915 2913 Pls
5924 2914 Pls
5933 2916 Pls
5942 2922 Pls
5951 2933 Pls
5960 2944 Pls
5968 2958 Pls
5977 2970 Pls
5986 2988 Pls
5994 3009 Pls
6003 3029 Pls
6012 3058 Pls
6020 3085 Pls
6029 3103 Pls
6038 3121 Pls
6046 3139 Pls
6055 3154 Pls
6063 3168 Pls
6072 3182 Pls
6080 3204 Pls
6089 3226 Pls
6097 3243 Pls
6106 3259 Pls
6114 3277 Pls
6122 3297 Pls
6131 3313 Pls
6139 3324 Pls
6147 3335 Pls
6156 3348 Pls
6164 3361 Pls
6172 3372 Pls
6180 3381 Pls
6189 3389 Pls
6197 3397 Pls
6205 3405 Pls
6213 3414 Pls
6221 3422 Pls
6230 3431 Pls
6238 3440 Pls
6246 3448 Pls
6254 3455 Pls
6262 3461 Pls
6270 3467 Pls
6278 3475 Pls
6286 3483 Pls
6294 3491 Pls
6302 3498 Pls
6310 3505 Pls
6318 3513 Pls
6326 3522 Pls
6334 3531 Pls
6341 3540 Pls
6349 3548 Pls
6357 3556 Pls
6365 3581 Pls
6373 3605 Pls
6381 3645 Pls
6388 3683 Pls
6396 3720 Pls
6404 3754 Pls
6412 3787 Pls
6419 3838 Pls
6427 3884 Pls
6435 3940 Pls
6442 4002 Pls
6450 4054 Pls
6458 4097 Pls
6465 4137 Pls
6473 4177 Pls
6480 4218 Pls
6488 4255 Pls
6496 4296 Pls
6503 4335 Pls
6511 4354 Pls
6518 4373 Pls
6526 4391 Pls
6533 4410 Pls
6540 4430 Pls
6548 4445 Pls
6555 4457 Pls
6563 4464 Pls
6570 4468 Pls
6577 4471 Pls
6585 4475 Pls
6592 4476 Pls
6600 4477 Pls
6607 4476 Pls
6614 4474 Pls
6621 4470 Pls
6629 4466 Pls
6636 4461 Pls
6643 4454 Pls
6650 4447 Pls
6658 4442 Pls
6665 4437 Pls
6672 4433 Pls
6679 4425 Pls
6686 4415 Pls
6693 4405 Pls
6701 4395 Pls
6708 4386 Pls
6678 4739 Pls
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
LTb
6395 4599 M
("./segelsteinwater.dat") Rshow
LT1
6479 4599 M
399 0 V
994 3540 M
88 -259 V
85 -289 V
84 -338 V
81 -238 V
80 -57 V
78 -37 V
77 -24 V
74 -21 V
73 -38 V
72 -42 V
70 -49 V
69 -46 V
68 -45 V
66 -50 V
66 -52 V
64 -51 V
62 -43 V
62 -68 V
61 -52 V
59 -37 V
59 -49 V
58 -46 V
57 -40 V
56 -29 V
55 -25 V
54 -24 V
53 -24 V
53 -27 V
52 -29 V
51 -31 V
50 -29 V
50 -29 V
49 -28 V
48 -30 V
48 -28 V
47 -30 V
46 -32 V
46 -28 V
45 -36 V
45 -31 V
44 -35 V
43 -30 V
43 -36 V
43 -37 V
42 -42 V
33 -42 V
50 -39 V
40 -45 V
40 -45 V
40 -42 V
39 -24 V
39 -18 V
38 -12 V
38 -19 V
38 -25 V
37 1 V
37 -1 V
36 8 V
36 27 V
36 77 V
35 72 V
35 75 V
35 67 V
34 31 V
34 17 V
34 30 V
33 31 V
33 48 V
33 34 V
32 33 V
32 37 V
32 34 V
32 39 V
31 41 V
31 52 V
25 68 V
36 76 V
30 95 V
36 91 V
24 107 V
30 76 V
29 41 V
29 31 V
23 22 V
34 21 V
23 6 V
33 12 V
28 3 V
33 6 V
22 17 V
28 27 V
32 39 V
21 19 V
27 13 V
26 15 V
32 23 V
21 32 V
25 32 V
26 52 V
25 57 V
26 98 V
25 95 V
stroke 5492 2515 M
25 87 V
19 95 V
25 109 V
25 111 V
29 76 V
24 35 V
24 21 V
23 6 V
24 3 V
23 -3 V
28 -7 V
14 -16 V
28 -20 V
23 -27 V
22 -29 V
27 -25 V
14 -12 V
26 -6 V
23 4 V
17 21 V
26 39 V
22 52 V
17 56 V
26 54 V
26 43 V
17 44 V
21 41 V
17 40 V
25 33 V
16 28 V
25 25 V
24 24 V
17 19 V
16 16 V
24 18 V
16 17 V
24 21 V
20 23 V
23 25 V
16 49 V
15 78 V
24 104 V
19 119 V
15 125 V
23 125 V
19 99 V
15 80 V
26 64 V
15 40 V
15 24 V
26 12 V
18 3 V
15 -6 V
18 -11 V
14 -14 V
26 -16 V
14 -22 V
18 -23 V
31 -60 V
42 -72 V
32 -85 V
34 -89 V
34 -92 V
30 -48 V
34 -21 V
33 23 V
32 55 V
33 61 V
3 8 V
stroke
LTb
994 4872 N
994 280 L
6052 0 V
0 4592 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
